<?php
/**
 * Created by PhpStorm.
 * User: codimiracle
 * Date: 18-1-25
 * Time: 下午10:57
 */

namespace CAstore\Utils;

use CAstore\Model\Entity\AppInfo;
use Deline\Model\Database\MySQLDataSource;
use PHPUnit\Framework\TestCase;

class AppInfoDAOImplTest extends TestCase
{
    private $appInfo;
    /**
     * @var IAppInfoDAO
     */
    private $dao;
    private $dataSource;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $database = array();
        $database["database_host"] = "localhost";
        $database["database_name"] = "test";
        $database["database_username"] = "root";
        $database["database_password"] = "Codimiracle855866";
        $this->dao = new IAppInfoDAO();
        $this->dataSource = new MySQLDataSource($database);
        $this->dataSource->getConnection()->exec("
            TRUNCATE `app`;
            TRUNCATE `content`;"
        );
        $this->dao->setDataSource($this->dataSource);
        $this->appInfo = new AppInfo();
        $this->appInfo->name = "App";
        $this->appInfo->description = "Hello App";
        $this->appInfo->package = "com.app.hello";
        $this->appInfo->version = "1.2";
        $this->appInfo->title = "Hello App";
        $this->appInfo->developer = "hello";
        $this->appInfo->platform = "android-x86";

    }

    public function testInsert() {
        $this->dao->setTarget($this->appInfo);
        $this->dao->insert();
        $app = $this->dao->queryById(1);
        self::assertNotNull($app);
        self::assertEquals($this->appInfo->name, $app->getName());
        self::assertEquals($this->appInfo->description, $app->getDescription());
        self::assertEquals($this->appInfo->package, $app->getPackage());
        self::assertEquals($this->appInfo->version, $app->getVersion());
        self::assertEquals($this->appInfo->title, $app->getTitle());
        self::assertEquals($this->appInfo->developer, $app->getDeveloper());
        self::assertEquals($this->appInfo->platform, $app->getPlatform());
    }

    public function testDelete() {
        $this->testInsert();
        $appInfo = $this->dao->queryById(1);
        self::assertNotNull($appInfo);
        $this->dao->setTarget($appInfo);
        $this->dao->delete();
        self::assertNull($this->dao->queryById(1));
    }

    public function testUpdate() {
        $this->testInsert();
        $appInfo = $this->dao->queryById(1);
        self::assertNotNull($appInfo);
        $appInfo->setName("王尼玛");
        $appInfo->setDescription("Des");
        $appInfo->setPackage("cmo");
        $appInfo->setVersion("3.4");
        $appInfo->setTitle("Titless");
        $appInfo->setDeveloper("Baidu");
        $this->dao->setTarget($appInfo);
        $this->dao->update();
        $modified = $this->dao->queryById(1);
        self::assertEquals($appInfo->getDescription(), $appInfo->getDescription());
        self::assertEquals($appInfo->getPackage(), $appInfo->getPackage());
        self::assertEquals($appInfo->getVersion(), $appInfo->getVersion());
        self::assertEquals($appInfo->getTitle(), $appInfo->getTitle());
        self::assertEquals($appInfo->getDeveloper(), $appInfo->getDeveloper());
        self::assertEquals($appInfo->getPlatform(), $appInfo->getPlatform());
        self::assertEquals($appInfo->getName(), $modified->getName());
    }
    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->dataSource->getConnection()->exec("
            TRUNCATE `app`;
            TRUNCATE `content`;"
        );
    }
}
