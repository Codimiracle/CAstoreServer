<?php
/**
 * Created by PhpStorm.
 * User: codimiracle
 * Date: 18-1-29
 * Time: 下午2:02
 */

namespace CAstore\Utils;

use CAstore\Component\DataSource;
use CAstore\Component\SQLDataSource;
use PHPUnit\Framework\TestCase;

class VotingTest extends TestCase
{
    /**
     * @var DataSource
     */
    private $dataSource;
    private $voting;
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $database = array();
        $database["database_host"] = "localhost";
        $database["database_name"] = "test";
        $database["database_username"] = "root";
        $database["database_password"] = "Codimiracle855866";
        $this->dataSource = new SQLDataSource($database);
        $this->dataSource->getConnection()->exec("TRUNCATE vote;");
        $this->voting = new Voting();
        $this->voting->setDataSource($this->dataSource);
    }

    public function testVoteUp()
    {
        $this->voting->voteUp(1,1);
        $result = $this->dataSource->getConnection()->query("select voted from vote WHERE uid=1 and ccid=1");
        self::assertEquals(1,$result->fetchColumn(0));
    }

    public function testVoteDown()
    {
        $this->voting->voteDown(1,1);
        $result = $this->dataSource->getConnection()->query("select voted from vote WHERE uid=1 and ccid=1");
        self::assertEquals(-1,$result->fetchColumn(0));
        try {
            $this->voting->voteUp(1,1);
            self::assertTrue(false);
        } catch (\Exception $e) {
            self::assertTrue(true);
        }
    }

    public function testBallotPositive()
    {
        $this->testVoteUp();
        self::assertEquals(1, $this->voting->ballotPositive(1));
    }

    public function testBallotNegative()
    {
        $this->testVoteDown();
        self::assertEquals(1, $this->voting->ballotNegative(1));
    }

    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->dataSource->getConnection()->exec("TRUNCATE vote;");
    }
}
